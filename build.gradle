import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

group = 'ru.assadi'
version = '1.0.0'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.40"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.1'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.security:spring-security-core:5.0.4.RELEASE'
    compile 'de.mkammerer:argon2-jvm:2.4'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.40'
    testCompile 'org.jetbrains.kotlin:kotlin-test:1.2.40'
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

tasks.withType(JavaCompile) {
    options.incremental = true
}

tasks.withType(KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 1.8
    }
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dokka {
    moduleName = ''
    outputFormat = 'gfm'
    outputDirectory = "docs"
    processConfigurations = ['compile']
    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/54/spring-security-password-encoder-argon2-kotlin/blob/master/src/main/kotlin"
        suffix = "#L"
    }
    sourceDirs = files('src/main/kotlin')
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "javadoc"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}
